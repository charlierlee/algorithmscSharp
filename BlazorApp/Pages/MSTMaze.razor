@page "/mstmaze"
@inject BrowserService browserService
@using Lib.MST
<PageTitle>MST Maze</PageTitle>

<div><button class="btn btn-primary" onclick="@RefreshPage">Refresh</button></div>
<div>&#160;</div>

<div>@((MarkupString)MazeString)</div>
@code 
{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await RefreshPage();

            StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        
        
    }
    
    protected override async Task OnParametersSetAsync()
    {
        
    }

    private int Height { get; set; } = 5;
    private int Width { get; set; } = 5;
    private string MazeString {get;set;}
    async Task GetDimensions() {
        var dimension = await browserService.GetDimensions();
        Height = dimension.Height;
        Width = dimension.Width;
    }
    private void GenerateMaze()
    {
        var height = Height / 22;
        if (height % 2 == 0)
        {
            height+=1;
        }
        var width = Width / 25;
        if (width % 2 == 0)
        {
            width+=1;
        }
        MazeGenerator mg = new MazeGenerator(height, width);
        int[,] maze = mg.GenerateMaze(false);
        MazeString =  MazeGenerator.renderMazeHtml(maze);
    }
    private async Task RefreshPage(){
        await GetDimensions();
        GenerateMaze();
    }
}